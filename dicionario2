.data
FileCompactadoName:	.asciiz	"tomzin.txt"
FileName:		.asciiz	"x.txt"
BufferIn:		.space	1
Dicionario:		.asciiz	
StringAux:		.space	10000
Caracter:		.space	2
StringFinal:		.space	10000




.text

jal	populaDicionario

#jal	compacta

li	$v0,10
syscall


compacta:
	li	$t0,0
	LoopGrandeCompacta:
		la	$s0,StringAux
		la	$s1,Caracter
		li	$s7,0
		addi	$sp,$sp,-16
		sw	$s0,12($sp)
		sw	$s1,8($sp)
		sw	$t0,4($sp)
		sw	$ra,($sp)
		move	$a0,$t0
		jal	get
		lw	$ra,($sp)
		lw	$t0,4($sp)
		lw	$s1,8($sp)
		lw	$s0,12($sp)
		addi	$sp,$sp,16
		move	$t1,$v0
		LoopPequenoCompacta:
			lb	$t2,($t1)
			lb	$t3,1($t1)
			addi	$s7,$s7,1
			beq	$t2,'\0',fimArquivoCompacta
			beq	$t3,'\0',fimStringCompacta
			sb	$t2,($s0)
			addi	$s0,$s0,1
			addi	$t1,$t1,1
			j	LoopPequenoCompacta
			fimStringCompacta:
				bgt 	$s7,1, StringMaiorQueUm
				sb	$t2,($s1)
				li	$t2,'\0'
				sb	$t2,1($s1)
				li	$v0,0
				j	EscreveCompacta
				StringMaiorQueUm:
				sb	$t2,($s1)
				li	$t2,'\0'
				sb	$t2,1($s0)
				sb	$t2,1($s1)
				la	$s0,StringAux
				addi	$sp,$sp,-16
				sw	$s0,12($sp)
				sw	$s1,8($sp)
				sw	$t0,4($sp)
				sw	$ra,($sp)
				move	$a0,$s0
				jal	getIndex
				lw	$ra,($sp)
				lw	$t0,4($sp)
				lw	$s1,8($sp)
				lw	$s0,12($sp)
				addi	$sp,$sp,16
				addi	$v0,$v0,1
				EscreveCompacta:
				move	$a0,$v0
				la	$a1,Caracter
				sw	$s0,12($sp)
				sw	$s1,8($sp)
				sw	$t0,4($sp)
				sw	$ra,($sp)
				jal	escreveArquivo
				lw	$ra,($sp)
				lw	$t0,4($sp)
				lw	$s1,8($sp)
				lw	$s0,12($sp)
				addi	$t0,$t0,1
				j	LoopGrandeCompacta
				fimArquivoCompacta:
					jr	$ra	
				
escreveArquivo:	#recebe em $a0 o index INTEIRO do dicionario e em a1 o caracter
	move	$a0,$a0
	move	$s1,$a1
	addi	$sp,$sp,-8
	sw	$ra,4($sp)
	sw	$s1,($sp)
	jal	intToString
	lw	$s1,($sp)
	lw	$ra,4($sp)
	addi	$sp,$sp,8
	la	$s0,StringAux	#aqui fica o retorno da funcai intToString
	la	$t0,StringFinal
	li	$t7,0
	li	$t1,'('
	sb	$t1,($t0)
	add	$t7,$t7,1
	addi	$t0,$t0,1
	LoopEscreveNumero:
		lb	$t1,($s0)
		beq	$t1,'\0',fimNumeroEscreve
		sb	$t1,($t0)
		add	$t7,$t7,1
		addi	$t0,$t0,1
		addi	$s0,$s0,1
		j	LoopEscreveNumero
	fimNumeroEscreve:
		li	$t1,','
		sb	$t1,($t0)
		add	$t7,$t7,1
		addi	$t0,$t0,1
		addi	$s0,$s0,1
		lb	$t1,($s1)
		sb	$t1,($t0)
		add	$t7,$t7,1
		addi	$t0,$t0,1
		li	$t1,')'
		sb	$t1,($t0)
		add	$t7,$t7,1
	escreveArquivoFinal:
		li	$v0,13
		la	$a0,FileCompactadoName
		li	$a1, 9          
		li 	$a2, 0
		syscall
		move	$a0,$v0
		la	$a1,StringFinal
		move	$a2,$t7
		li	$v0,15
		syscall
		li	$v0,16
		syscall
		
		
		jr	$ra
	
		
##############################################################################################################################
intToString:	#a0 recebe o valor int 
la	$t1,StringAux
move	$t0,$a0
li	$t3,0
li	$t4,0
loopIntToString:
div 	$t2, $t0, 10
mfhi 	$t2 #resto
addi	$t2,$t2,48
addi	$sp,$sp,-1
sb 	$t2,($sp)
div 	$t0, $t0, 10
addi	$t3,$t3,1
beqz	$t0,fimLoopIntToString		
j	loopIntToString
fimLoopIntToString:
lb	$t2,($sp)
addi	$sp,$sp,1
sb	$t2,($t1)
addi	$t1,$t1,1
addi	$t4,$t4,1
beq	$t3,$t4,fimFim
j	fimLoopIntToString
fimFim:
li	$t2,0
addi	$t1,$t1,1
sb	$t2,($t1)
jr	$ra
##############################################################################################################################




getIndex:	# $a0 tem o valor da string
	move	$s0,$a0
	la	$s1,Dicionario
	addi	$s1,$s1,1
	la	$s2,StringAux
	li	$t1,0
LoopIndex:	
	lb	$t0,($s1)
	sb	$t0,($s2)
	beq	$t0,'\0', fimStringIndex
	addi	$s1,$s1,1
	addi	$s2,$s2,1
	j	LoopIndex
	fimStringIndex:
		la	$s2,StringAux
		addi	$sp,$sp,-20
		sw	$ra,16($sp)
		sw	$s0,12($sp)
		sw	$s1,8($sp)
		sw	$s2,4($sp)
		sw	$t1,($sp)
		move	$a0,$s2
		move	$a1,$s0
		jal	comparaString
		lw	$t1,($sp)
		lw	$s2,4($sp)
		lw	$s1,8($sp)
		lw	$s0,12($sp)
		lw	$ra,16($sp)
		addi	$sp,$sp,20
		beq	$v0,1,IguaisIndex
		lb	$t0,1($s1)
		beq	$t0,'\0',fimDicionarioIndex
		addi	$s1,$s1,1
		addi	$t1,$t1,1
		la	$s2,StringAux
		j	LoopIndex
		IguaisIndex:
			move	$v0,$t1
			jr	$ra
		fimDicionarioIndex:
			li	$v0,-1
			jr	$ra

populaDicionario:
	la	$s0,Dicionario
	la	$s1,StringAux	
	la	$s2,BufferIn
	la	$a0,FileName
	li	$a1,0
	li	$a2,0
	li	$v0,13
	syscall
	move	$s3,$v0
	LoopPopula:
		move	$a0,$s3
		move	$a1,$s2
		li	$a2,1
		li	$v0,14
		syscall
		move	$t0,$v0
		beq	$t0,0,fimArquivo
		lb	$t1,($s2)
		li	$t2,'\0'
		sb	$t1,($s1)
		sb	$t2,1($s1)
		addi	$sp,$sp,-20
		sw	$ra,16($sp)
		sw	$s0,12($sp)
		sw	$s1,8($sp)
		sw	$s2,4($sp)
		sw	$s3,($sp)
		la	$a0,StringAux
		jal	adiciona
		lw	$s3,($sp)
		lw	$s2,4($sp)
		lw	$s1,8($sp)
		lw	$s0,12($sp)
		lw	$ra,16($sp)
		addi	$sp,$sp,20
		move	$t0,$v0
		beq	$t0,-1,jaExistia
		la	$s1,StringAux
		j	LoopPopula
		jaExistia:
			addi	$s1,$s1,1
			j	LoopPopula
		fimArquivo:
			move	$a0,$s3
			li	$v0,16
			syscall
			jr	$ra		
		
		
adiciona:	# recebe string em $a0
	move	$t0,$a0
	li	$t1,0
	Loop1:
		move	$a0,$t1
		addi	$sp,$sp,-12
		sw	$ra,8($sp)
		sw	$t0,4($sp)
		sw	$t1,($sp)
		jal	get
		lw	$t1,($sp)
		lw	$t0,4($sp)
		lw	$ra,8($sp)
		addi	$sp,$sp,12	
		addi	$sp,$sp,-16
		move	$t2,$v0
		sw	$ra,12($sp)
		sw	$t2,8($sp)
		sw	$t0,4($sp)
		sw	$t1,($sp)
		move	$a0,$t2
		move	$a1,$t0
		jal	comparaString
		lw	$t1,($sp)
		lw	$t0,4($sp)
		lw	$t2,8($sp)
		lw	$ra,12($sp)
		addi	$sp,$sp,16
		move	$t3,$v0
		beq	$t3,1,Existe
		lb	$t2,($t2)
		beq	$t2,'\0',naoExiste
		addi	$t1,$t1,1
		j	Loop1
		Existe:
			li	$v0,-1
			jr	$ra
		naoExiste:
			la	$t1,Dicionario
		Loop2:
			lb	$t2,($t1)
			lb	$t3,1($t1)
			beq	$t2,'\0',fim1
			addi	$t1,$t1,1
			j	Loop2
			fim1:
				beq	$t3,'\0',fim2
				addi	$t1,$t1,1
				j	Loop2
			fim2:			
				addi	$t1,$t1,1
				lb	$t4,($t0)
				sb	$t4,($t1)
				addi	$t0,$t0,1
				beq	$t4,'\0',fim
				j	fim2
			fim:
				li	$v0,1
				jr	$ra
		
		
	

comparaString:	#coloca em $v0 1 se forem iguais e -1 se forem diferentes
	lb	$t0,($a0)	#carrega da memoria um byte string1
	lb	$t1,($a1)	#carrega da memoria um byte string2	
	bne	$t0,$t1, notEqual
	beq	$t0,$t1, equal		
notEqual:	
	li	$v0,-1
	jr	$ra
equal:	
	beq	$t0,$zero,fimCompara
	addi	$a0,$a0,1
	addi	$a1,$a1,1
	j	comparaString
fimCompara:
	li	$v0,1
	jr	$ra	
	

get:	# recebe int em $a0
	
	move	$t0,$a0
	la	$t1,Dicionario
	li	$t2,0
	addi	$t1,$t1,1
	Loop:
		beq	$t2,$t0,chegouString
		lb	$t3,($t1)
		beq	$t3,'\0',fimString
		addi	$t1,$t1,1
		j	Loop
		fimString:
			addi	$t2,$t2,1
			addi	$t1,$t1,1
			j	Loop
		chegouString:
			move	$v0,$t1
			jr	$ra
